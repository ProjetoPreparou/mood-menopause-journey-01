
import React, { useState, useRef } from 'react';
import { Card } from '@/components/ui/card';
import { Button } from '@/components/ui/button';
import { Textarea } from '@/components/ui/textarea';
import { Label } from '@/components/ui/label';
import { Play, Pause, CheckCircle, Circle, Heart } from 'lucide-react';
import { useToast } from '@/hooks/use-toast';

interface DayContentProps {
  day: number;
  onComplete: () => void;
}

const DayContent: React.FC<DayContentProps> = ({ day, onComplete }) => {
  const [isAudioPlaying, setIsAudioPlaying] = useState(false);
  const [isRitualComplete, setIsRitualComplete] = useState(false);
  const [reflectionText, setReflectionText] = useState('');
  const [isAudioCompleted, setIsAudioCompleted] = useState(false);
  const [isLoading, setIsLoading] = useState(false);
  
  const audioRef = useRef<HTMLAudioElement | null>(null);
  const { toast } = useToast();

  // Perguntas simb√≥licas para cada dia (exemplo)
  const dailyQuestions = [
    "O que em mim hoje precisa ser acolhido?",
    "Qual parte de minha ess√™ncia desejo nutrir?",
    "O que meu cora√ß√£o est√° tentando me dizer?",
    "Que semente emocional posso plantar hoje?",
    "Como posso honrar minha jornada at√© aqui?",
    "Qual aspecto de mim merece mais amor?",
    "O que preciso liberar para florescer?",
  ];

  const currentQuestion = dailyQuestions[(day - 1) % dailyQuestions.length];

  const handleAudioToggle = async () => {
    try {
      if (!audioRef.current) {
        // Criar elemento de √°udio dinamicamente
        audioRef.current = new Audio(`/content/audio/audio-dia-${day}.mp3`);
        audioRef.current.addEventListener('ended', () => {
          setIsAudioPlaying(false);
          setIsAudioCompleted(true);
          toast({
            title: "√Åudio conclu√≠do üå∏",
            description: "Permita-se absorver essa experi√™ncia...",
          });
        });
        audioRef.current.addEventListener('error', () => {
          toast({
            title: "Erro no √°udio",
            description: "N√£o foi poss√≠vel reproduzir o √°udio. Tente novamente.",
            variant: "destructive",
          });
          setIsAudioPlaying(false);
        });
      }

      if (isAudioPlaying) {
        audioRef.current.pause();
        setIsAudioPlaying(false);
      } else {
        await audioRef.current.play();
        setIsAudioPlaying(true);
      }
    } catch (error) {
      console.error('Erro ao reproduzir √°udio:', error);
      toast({
        title: "Erro no √°udio",
        description: "N√£o foi poss√≠vel reproduzir o √°udio. Verifique sua conex√£o.",
        variant: "destructive",
      });
    }
  };

  const handleRitualToggle = () => {
    setIsRitualComplete(!isRitualComplete);
    if (!isRitualComplete) {
      toast({
        title: "Ritual marcado como feito! üïØÔ∏è",
        description: "Parab√©ns por honrar esse momento sagrado.",
      });
    }
  };

  const canComplete = isAudioCompleted && isRitualComplete && reflectionText.trim().length > 0;

  const handleCompleteDay = async () => {
    if (!canComplete) return;

    setIsLoading(true);
    try {
      // Simular salvamento do progresso
      await new Promise(resolve => setTimeout(resolve, 1000));
      
      toast({
        title: "Dia conclu√≠do! üå∏",
        description: `Dia ${day} do seu florescimento foi registrado com amor.`,
      });
      
      onComplete();
    } catch (error) {
      console.error('Erro ao salvar progresso:', error);
      toast({
        title: "Erro ao salvar",
        description: "N√£o foi poss√≠vel salvar seu progresso. Tente novamente.",
        variant: "destructive",
      });
    } finally {
      setIsLoading(false);
    }
  };

  return (
    <div className="space-y-6 max-w-2xl mx-auto p-4">
      {/* Header do Dia */}
      <Card className="bg-gradient-to-r from-pink-50 to-rose-50 border-pink-200 p-6">
        <div className="text-center">
          <h2 className="font-lora text-2xl font-bold text-[#3C3C3C] mb-2">
            Dia {day} üå∏
          </h2>
          <p className="font-nunito text-gray-600">
            Sua jornada de florescimento continua...
          </p>
        </div>
      </Card>

      {/* Reprodu√ß√£o de √Åudio */}
      <Card className="p-6 border-purple-200">
        <div className="flex items-center justify-between mb-4">
          <div>
            <h3 className="font-lora text-lg font-semibold text-[#3C3C3C] mb-1">
              √Åudio do Dia üéß
            </h3>
            <p className="font-nunito text-sm text-gray-600">
              Ou√ßa sua medita√ß√£o guiada di√°ria
            </p>
          </div>
          {isAudioCompleted && (
            <CheckCircle className="w-6 h-6 text-green-500" />
          )}
        </div>
        
        <Button
          onClick={handleAudioToggle}
          className="w-full bg-[#A75C3F] hover:bg-[#8B4A36] text-white"
          size="lg"
        >
          {isAudioPlaying ? (
            <>
              <Pause className="w-5 h-5 mr-2" />
              Pausar √Åudio
            </>
          ) : (
            <>
              <Play className="w-5 h-5 mr-2" />
              Reproduzir √Åudio
            </>
          )}
        </Button>
      </Card>

      {/* Ritual Di√°rio */}
      <Card className="p-6 border-amber-200">
        <div className="flex items-center justify-between mb-4">
          <div>
            <h3 className="font-lora text-lg font-semibold text-[#3C3C3C] mb-1">
              Ritual do Dia üïØÔ∏è
            </h3>
            <p className="font-nunito text-sm text-gray-600">
              Marque quando completar seu ritual sagrado
            </p>
          </div>
        </div>
        
        <Button
          onClick={handleRitualToggle}
          variant={isRitualComplete ? "default" : "outline"}
          className={`w-full ${
            isRitualComplete 
              ? "bg-green-500 hover:bg-green-600 text-white" 
              : "border-amber-300 hover:bg-amber-50"
          }`}
          size="lg"
        >
          {isRitualComplete ? (
            <>
              <CheckCircle className="w-5 h-5 mr-2" />
              Ritual Conclu√≠do
            </>
          ) : (
            <>
              <Circle className="w-5 h-5 mr-2" />
              Marcar Ritual como Feito
            </>
          )}
        </Button>
      </Card>

      {/* Pergunta Reflexiva */}
      <Card className="p-6 border-blue-200">
        <div className="mb-4">
          <Label className="font-lora text-lg font-semibold text-[#3C3C3C] mb-3 block">
            Reflex√£o do Dia üí≠
          </Label>
          <p className="font-nunito text-gray-700 mb-4 italic">
            "{currentQuestion}"
          </p>
        </div>
        
        <Textarea
          value={reflectionText}
          onChange={(e) => setReflectionText(e.target.value)}
          placeholder="Escreva aqui sua reflex√£o do cora√ß√£o..."
          className="min-h-[120px] border-blue-200 focus:border-blue-400 font-nunito"
          required
        />
        
        {reflectionText.trim().length > 0 && (
          <div className="mt-2 text-sm text-green-600 font-nunito">
            ‚úì Reflex√£o registrada com amor
          </div>
        )}
      </Card>

      {/* Bot√£o Finalizar Dia */}
      <Card className="p-6 bg-gradient-to-r from-rose-50 to-pink-50 border-rose-200">
        <Button
          onClick={handleCompleteDay}
          disabled={!canComplete || isLoading}
          className={`w-full ${
            canComplete
              ? "bg-[#A75C3F] hover:bg-[#8B4A36] text-white"
              : "bg-gray-300 text-gray-500 cursor-not-allowed"
          }`}
          size="lg"
        >
          {isLoading ? (
            <>
              <div className="animate-spin rounded-full h-5 w-5 border-b-2 border-white mr-2"></div>
              Salvando...
            </>
          ) : (
            <>
              <Heart className="w-5 h-5 mr-2" />
              Finalizar Dia
            </>
          )}
        </Button>
        
        {!canComplete && (
          <div className="mt-3 text-sm text-gray-600 font-nunito text-center">
            Complete todos os passos: √°udio, ritual e reflex√£o
          </div>
        )}
      </Card>
    </div>
  );
};

export default DayContent;
